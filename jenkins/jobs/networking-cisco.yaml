- builder:
    name: setup-l2-tunnel
    builders:
      - shell: |
          #!/bin/bash -xe
          export BASE=/opt/git
          source $BASE/openstack-dev/devstack/functions-common

          if is_suse || is_fedora; then
            ovs_package='openvswitch'
            ovs_service='openvswitch'
          elif uses_debs; then
            ovs_package='openvswitch-switch'
            ovs_service='openvswitch-switch'
          else
            echo "Unsupported platform, can't determine openvswitch service"
            exit 1
          fi

          install_ovs_deps="source $BASE/openstack-dev/devstack/functions-common; \
                            install_package ${ovs_package}; \
                            restart_service ${ovs_service}"
          eval $install_ovs_deps

          # Setup the virtual L2 path to the nexus
          private_ip=$(cat /etc/nodepool/primary_node_private)
          tapid=$(cat /etc/nodepool/uuid | cut -c1-8)
          tapid="tap${tapid}"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link add ${tapid}-1 type gretap local 10.0.0.15 remote $private_ip key 1"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link add ${tapid}-2 type gretap local 10.0.0.15 remote $private_ip key 2"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link set dev ${tapid}-1 up"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link set dev ${tapid}-2 up"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo brctl addif nexusint1 ${tapid}-1"
          ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo brctl addif nexusint2 ${tapid}-2"
          sudo ip link add nexustap1 type gretap local $private_ip remote 10.0.0.15 key 1
          sudo ip link add nexustap2 type gretap local $private_ip remote 10.0.0.15 key 2

          sudo ovs-vsctl add-br br-nexusnet
          sudo ovs-vsctl add-br br-ex

          sudo ovs-vsctl add-port br-nexusnet nexustap1

- builder:
    name: claim-some-vlans
    builders:
      - shell: |
          #!/bin/bash -xe
          # Claim a vlan range from the CI system
          python /opt/nodepool-scripts/claim_vlan.py > claimed_vlans

- publisher:
    name: teardown-l2-tunnel
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
            - shell: |
                #!/bin/bash -xe
                # Destroy the virtual L2 path to the nexus
                tapid=$(cat /etc/nodepool/uuid | cut -c1-8)
                tapid="tap${tapid}"
                ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link del dev ${tapid}-1"
                ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link del dev ${tapid}-2"

- publisher:
    name: release-some-vlans
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
            - shell: |
                #!/bin/bash -xe
                # Release vlan range back to pool
                minvlan=$(cat claimed_vlans | cut -f1 -d":")
                maxvlan=$(cat claimed_vlans | cut -f2 -d":")
                python /opt/nodepool-scripts/free_vlan.py "${minvlan}" "${maxvlan}"

- job-template:
    name: 'gate-{name}-dsvm-tempest-full-nexus-{node}'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 185  # Timeout in *minutes*
          fail: true  # A job run that exceeds the timeout will cause a failure
      - timestamps

    builders:
      - net-info
      - devstack-checkout-http
      - setup-l2-tunnel
      - claim-some-vlans
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          # 180 minutes in milliseconds
          export BUILD_TIMEOUT=10800000
          export DEVSTACK_GATE_TEMPEST=1

          #export DEVSTACK_GATE_TOPOLOGY="multinode"

          export OVERRIDE_ZUUL_BRANCH=stable/ocata

          export PROJECTS="openstack/networking-cisco $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin networking-cisco https://git.openstack.org/openstack/networking-cisco"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_service net-cisco"

          CLAIMED_VLAN_RANGE=$(cat claimed_vlans)
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"ML2_VLAN_RANGES=nexusnet:${{CLAIMED_VLAN_RANGE}}"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"OVS_VLAN_RANGES=nexusnet:${{CLAIMED_VLAN_RANGE}}"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"ENABLE_TENANT_VLANS=True"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"OVS_BRIDGE_MAPPINGS=public:br-ex,nexusnet:br-nexusnet"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch,linuxbridge,cisco_nexus"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"Q_ML2_TENANT_NETWORK_TYPE=vlan"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
      - link-logs

    publishers:
      - teardown-l2-tunnel
      - release-some-vlans
      - devstack-logs
      - console-log
