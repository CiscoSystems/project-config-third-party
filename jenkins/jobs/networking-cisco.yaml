- job-template:
    name: 'gate-{name}-dsvm-tempest-full-nexus-{node}'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 185  # Timeout in *minutes*
          fail: true  # A job run that exceeds the timeout will cause a failure
      - timestamps

    builders:
      - net-info
      - devstack-checkout-http
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          # 180 minutes in milliseconds
          export BUILD_TIMEOUT=10800000
          export DEVSTACK_GATE_TEMPEST=1

          #export DEVSTACK_GATE_TOPOLOGY="multinode"

          function pre_test_hook {{
            # Setup the virtual L2 path to the nexus
            local private_ip=$(cat /etc/nodepool/primary_node_private)
            local tapid=$(cat /etc/nodepool/uuid | cut -c1-8)
            tapid="tap${{tapid}}"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link add ${{tapid}}-1 type gretap local 10.0.0.15 remote $private_ip key 1"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link add ${{tapid}}-2 type gretap local 10.0.0.15 remote $private_ip key 2"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link set dev ${{tapid}}-1 up"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link set dev ${{tapid}}-2 up"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo brctl addif nexusint1 ${{tapid}}-1"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo brctl addif nexusint2 ${{tapid}}-2"
            sudo ip link add nexustap1 type gretap local $private_ip remote 10.0.0.15 key 1
            sudo ip link add nexustap2 type gretap local $private_ip remote 10.0.0.15 key 2

            # Claim a vlan range from the CI system 
            export CLAIMED_VLAN_RANGE=$(python /opt/nodepool-scripts/claim_vlan.py)
            export DEVSTACK_LOCAL_CONFIG+=$'\n'"TENANT_VLAN_RANGE=${{vlan_range}}"
          }}
          export -f pre_test_hook

          function gate_hook {{
            exit 0
          }}
          export -f gate_hook

          function post_test_hook {{
            # Release vlan range back to pool
            min-vlan=$(echo "$CLAIMED_VLAN_RANGE" | cut -f1 -d":") 
            max-vlan=$(echo "$CLAIMED_VLAN_RANGE" | cut -f2 -d":")
            python /opt/nodepool-scripts/free_vlan.py $min-vlan $max-vlan

            # Destory the virtual L2 path to the nexus
            local tapid=$(cat /etc/nodepool/uuid | cut -c1-8)
            tapid="tap${{tapid}}"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link del dev ${{tapid}}-1"
            ssh tapuser@10.0.0.15 -o StrictHostKeyChecking=no -i /opt/nodepool-scripts/vm-bridge-key "sudo ip link del dev ${{tapid}}-2"
          }}
          export -f post_test_hook

          export PROJECTS="openstack/networking-cisco $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin networking-cisco https://git.openstack.org/openstack/networking-cisco"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
      - link-logs

    publishers:
      - devstack-logs
      - console-log
