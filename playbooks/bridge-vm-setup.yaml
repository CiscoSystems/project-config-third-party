---
- hosts: all
  tasks:
    # Setup the user for the tests to connect to this machine with
    - name: Add tapuser
      user: name=tapuser

    - name: Add test authorized key to tapuser
      authorized_key:
        user: tapuser
        state: present
        key: >-
          {{ lookup('file', '%s/nodepool/scripts/vm-bridge-key.pub'
          % project_config_repo) }}

    - name: Add sudo rules for the tapuser
      blockinfile:
        path: /etc/sudoers.d/tapuser
        block: |
          tapuser ALL=(ALL) NOPASSWD: /sbin/brctl
          tapuser ALL=(ALL) NOPASSWD: /sbin/ip
        create: "yes"

    # Setup infrastructure for the L2 tunnels
    - name: Install bridge-utils
      package:
        name: bridge-utils
        state: latest

    - name: Check if bridges exist
      shell: brctl show | grep {{ item }}
      register: check_bridges_exist
      changed_when: "False"
      failed_when: check_bridges_exist.rc >= 2
      with_items:
        - nexusint1
        - nexusint2

    - name: Setup bridges for nexus interfaces
      command: brctl addbr {{ item.item }}
      when: item.rc == 1
      with_items: "{{ check_bridges_exist.results }}"

    - name: Check if tap interfaces exist
      shell: ip link | grep {{ item.name }}
      register: check_taps_exist
      changed_when: "False"
      failed_when: check_taps_exist.rc >= 2
      with_items:
        - {name: 'nexustap1', key: 1}
        - {name: 'nexustap2', key: 2}

    - name: Create GRE tap for first nexus interface
      command: >
        ip link add {{ item.item.name }} type gretap local 10.0.196.33
        remote 10.0.196.3 key {{ item.item.key }}
      when: item.rc == 1
      with_items: "{{ check_taps_exist.results }}"

    - name: Check if GRE taps are added to the bridges
      shell: brctl show {{ item.bridge }} | grep {{ item.tap }}
      register: check_taps_in_bridges
      changed_when: "False"
      failed_when: check_taps_in_bridges.rc >= 2
      with_items:
        - {bridge: 'nexusint1', tap: 'nexustap1'}
        - {bridge: 'nexusint2', tap: 'nexustap2'}

    - name: Add nexus taps to the bridges
      command: brctl addif {{ item.item.bridge }} {{ item.item.tap }}
      when: item.rc == 1
      with_items: "{{ check_taps_in_bridges.results }}"

    - name: Check if interfaces are up
      shell: ip link sh {{ item }} | grep "UP"
      register: check_devices_up
      changed_when: "False"
      failed_when: check_devices_up.rc >= 2
      with_items:
        - nexusint1
        - nexusint2
        - nexustap1
        - nexustap2

    - name: Bring up all the interfaces
      command: ip link set {{ item.item }} up
      changed_when: "False"
      when: item.rc == 1
      with_items: "{{ check_devices_up.results }}"

    # Make sure GRE is allowed by iptables
    - name: Check if GRE rule already in iptables
      shell: iptables --list-rules | grep -e "-p gre"
      register: check_iptables_result
      changed_when: "False"
      failed_when: check_iptables_result.rc >= 2

    - name: Make sure GRE is allowed by iptables
      command: iptables -I openstack-INPUT 1 -p gre -j ACCEPT
      when: check_iptables_result.rc == 1

    - name: Save existing iptables rules to file to persist reboot
      shell: iptables-save > /etc/iptables/rules.v4
      when: check_iptables_result.rc == 1
